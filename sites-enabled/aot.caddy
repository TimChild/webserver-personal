# Variables are: DOMAIN, SITE_NAME, BACKEND_SERVICE
http://adventuresoftim.com http://www.adventuresoftim.com www.adventuresoftim.com {
	redir https://adventuresoftim.com{uri}
}

adventuresoftim.com {
	encode gzip
	# Enable access logging
	log {
		output file /var/log/caddy/access.log {
			mode 644
			roll_size 10MiB
			roll_keep 5
		}
		format console
	}

	# Enable error logging
	handle_errors {
		respond "{err.status_code} {err.status_text}: {err.message}"
	}


	@backend_routes path /_event/* /ping /_upload /_upload/*
	handle @backend_routes {
		reverse_proxy aot-backend:8000
	}

	# File matcher to check if the request points to a valid quarto file
	# NOTE: Do not catch {path}/ here as it captures the root path that should be 
	# handled by aot nextjs -- instead check {path}/ in the catch-all handle block
	@isInQuarto file {
		root /srv/www/aot-quarto
		try_files {path} {path}.html
	}
	handle @isInQuarto {
		root * /srv/www/aot-quarto
		try_files {path} {path}.html
		file_server
	}

	# File matcher to check if the request points to a valid aot nextjs file
	@isInAot file {
		root /srv/www/aot
		try_files {path} {path}/
	}
	handle @isInAot {
		root * /srv/www/aot
		try_files {path} {path}/
		file_server
	}

	# Anything that didn't match -- serve the quarto 404 page
	handle {
		root * /srv/www/aot-quarto
		try_files {path}/ /404.html  # NOTE: Check for {path}/ here instead
		file_server
	}
}

